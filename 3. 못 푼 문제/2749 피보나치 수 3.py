n = int(input())
dp = [0, 1]
# 피보나치 수열 시간복잡도
# 재귀 함수: 2^n
# 다이나믹 프로그래밍: O(n)

mod = 1000000
p = 15 * mod // 10
# 피사노 주기란?
# 피보나치 수를 어떤 수 k로 나눌 때, 나머지는 항상 주기를 가지게 된다는 원리
# 주기의 길이를 P라고 했을 때, N번째 피보나치 수를 M으로 나눈 나머지는
# N % P번째 피보나치 수를 M으로 나눈 나머지와 같다,
# 주기는 M = 10^k (k > 2)일 때, 항상 15 * 10^(k-1)이다.

for i in range(2, p):
    dp.append(dp[i - 1] + dp[i - 2])
    dp[i] %= mod

print(dp[n % p])
